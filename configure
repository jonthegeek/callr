#! /usr/bin/env sh

# Check that this is not just ./configure. We need to run this
# from R CMD INSTALL, to have the R env vars set.

if [ -z "$R_HOME" ]; then
    echo >&2 R_HOME is not set, are you running R CMD INSTALL?
    exit 1
fi

# Find the R binary we need to use. This is a bit trickier on
# Windows, because it has two architectures. On windows R_ARCH_BIN
# is set, so this should work everywhere.
RBIN="${R_HOME}/bin${R_ARCH_BIN}/R"

# ------------------------------------------------------------------------
# Detect system
# ------------------------------------------------------------------------

unset POSIX
if [ "$R_OSTYPE" = "unix" ]; then
    UNAME=`uname`
else
    UNAME=Windows
fi

unset LINUX
if [ "$UNAME" = "Linux" ]; then LINUX=true; POSIX=true; fi

unset MACOS
if [ "$UNAME" = "Darwin" ]; then MACOS=true; POSIX=true; fi

# ------------------------------------------------------------------------
# Set source files, macros, libs, compile flags
# ------------------------------------------------------------------------

MACROS=""
OBJECTS="init.o"
LIBEARIES=""
TARGETS=""
CPPFLAGS=""

if [ -n "$MACOS" ]; then
    MACROS="${MACROS} PS__MACOS"
    PS__MACOS=1
    OBJECTS="${OBJECTS} rdlopen.o pmload.o dyld/common/MachOAnalyzer.o"
    OBJECTS="${OBJECTS} dyld/common/MachOFile.o dyld/common/MachOLoaded.o"
    OBJECTS="${OBJECTS} dyld/common/MachOLayout.o dyld/common/Diagnostics.o"
    OBJECTS="${OBJECTS} dyld/common/ClosureFileSystemPhysical.o"
    CPPFLAGS="${CPPFLAGS} -I include -I dyld\/lsl"
    CXXFLAGS="${CXXFLAGS} -std=gnu++20"
fi

# ------------------------------------------------------------------------
# Create Makevars file
# ------------------------------------------------------------------------

# OBJECTS (= source files)
# LIBRARIES -> PKG_LIBS

LIBS=`for l in $LIBRARIES; do echo "-l${l}"; done | tr "\n", " "`

cat src/Makevars.in | \
    sed "s|@OBJECTS@|${OBJECTS}|" | \
    sed "s/@LIBS@/${LIBS}/" | \
    sed "s/@CPPFLAGS@/${CPPFLAGS}/" | \
    sed "s/@CXXFLAGS@/${CXXFLAGS}/" | \
    sed "s/@TARGETS@/${TARGETS}/" > src/Makevars

# MACROS will be set as preprocessor macros
echo "/* Macros created by configure */" > src/config.h
for m in $MACROS; do
    ind='$'$m
    echo \#undef $m
    eval echo '\#'define $m $ind
done >> src/config.h
